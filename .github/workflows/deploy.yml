

name: Déploiement Automatique kubernetes


on:
  push:
    branches: [main]
  pull_request:
    branches: [main]


jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:

     #Étape1: récuperation du code 
    - name: Checkout de code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

     #Étape2: Installer Kubectl
    - name: Installer kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.33.1'

     #Étape3: Démarrer Minikube 
    - name: Démarrer Minikube
      run: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo install minikube-linux-amd64 /usr/local/bin/minikube
        minikube start --driver=docker --kubernetes-version=v1.33.1 --memory=4000 --cpus=2  --force
        sleep 30
        minikube status
        echo "Minikube démarré avec succés"

     #Étape4: configuration kubernetes 
    - name: Configuration kubernetes
      run: |
        sleep 10

        minikube kubectl -- get nodes
        minikube kubectl -- cluster-info
        echo "kubernetes est configuré"

     #Étape5: Build et Push Docker
    - name: Build & Push Docker Image
      run: |
        echo " Construction de l'image Docker "
        eval $(minikube docker-env)
        docker build -t zahmoul/event-registration:latest ./php-app
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{secrets.DOCKER_USERNAME }}" --password-stdin
        docker push zahmoul/event-registration:latest
        echo " Image Docker pushée "

    #Étape6: Déploiment kubernetes 
    - name: Déploiement Application
      run: |
        echo " Applications de manifest Kubernetes..."
        minikube kubectl -- apply -f k8s/ --namespace=php-mysql
        echo " Manifests appliqués "

        # attendre que les pods soient prét
        echo "attente de deploiement mysql ..."
        minikube kubectl -- wait --for=condition=ready pod -l app=mysql -n php-mysql --timeout=300s
        echo "attente de deploiement php ..."
        minikube kubectl -- wait --for=condition=ready pod -l app=php-app -n php-mysql --timeout=300s

        echo "déploiement terminé"

    #Etape7: Tests Automatisés   
    - name: Tests Automatisés
      run: |
        echo " Test de la base de données..."
        sleep 25

        # verifier que la base event_platform existe
        if kubectl exec -n php-mysql deployment/mysql -- \
          mysql -u root -prootpassword -e "USE event_platform; SELECT 1;" > /dev/null 2>&1; then
          echo "base de donéés event_platform accessible"
        else
          echo "base de donéés event_platform inaccessible"
          exit 1
        fi

        # verifier que le tableau participants existe
        if kubectl exec -n php-mysql deployment/mysql -- \
          mysql -u root -prootpassword -e "USE event_platform; SELECT COUNT(*) FROM participants;" > /dev/null 2>&1; then
          echo "table participants truovée"
        else
          echo "table participants non trouvée"
        fi

        # verifier que le service php répond
        PHP_POD=$(kubectl get pods -n php-mysql -l app=php-app -o jsonpath='{.items[0].metadata.name}')
        if kubectl exec -n php-mysql $PHP_POD -- curl -s https://localhost> /dev/null 2>&1; then
          echo "Service PHP fonctionel"
        else
          echo "Service PHP non fonctionel"
          exit 1
        fi
        echo"tous les tests sont réussis"


    #Etape8: Verification Finale
    - name: Vérrification du déploiement
      run: |
        echo: "=== État des ressources dans php-mysql ==="
        kubectl get all -n php-mysql

        echo: "=== Détail de services ==="
        kubectl get services -n php-mysql

        echo: "=== URL d'accés a l'application ==="
        minikube service list -n php-mysql


    #Etape9: Notification Succés
    - name: Notification Succés
      if: success()
      run: |
        echo " DÉPLOIEMENT RÉUSSI "
        echo " APPLICATIONS DEPLOYÉE AVEC SUCCÉS "
        echo "Pour accéder a l'application: minikube service php-service -n php-mysql"
